<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- POSTS 테이블에서 CRUD에 필요한 SQL 문장들을 선언 -->
<mapper namespace="com.itwill.spring2.repository.PostDao">

    <!-- POSTS 테이블 전체 검색, 아이디 내림차순 정렬 -->
    <select id="selectOrderByIdDesc" resultType="Post">
        select * from POSTS order by ID desc
    </select>
    
    <!-- POSTS 테이블에서 아이디(PK)로 검색 -->
    <select id="selectById" resultType="Post">
        select * from POSTS where ID = #{id}
    </select>
    
    <!-- POSTS 테이블에 새 포스트 삽입 -->
    <insert id="insert">
        insert into POSTS (TITLE, CONTENT, AUTHOR) values (#{title}, #{content}, #{author})
    </insert>
    
    <!-- POSTS 테이블에서 해당 아이디의 제목, 내용, 수정시간을 업데이트 -->
    <update id="update">
        update POSTS
        set TITLE = #{title}, CONTENT = #{content}, MODIFIED_TIME = systimestamp
        where ID = #{id}
    </update>

    <!-- POSTS 테이블에서 아이디(PK)로 행을 삭제 -->
    <delete id="delete">
        delete from POSTS where ID = #{id}
    </delete>
    
    <!-- POSTS 테이블에서 제목, 내용, 제목 또는 내용, 작성자로 검색하기 -->
    <select id="search" resultType="Post">
        <bind name="searchKeyword" value="'%' + keyword + '%'" />
        select * from POSTS
        where 
        <choose>
            <when test='category eq "t"'>
                upper(TITLE) like upper(#{searchKeyword})
            </when>
            <when test='category eq "c"'>
                upper(CONTENT) like upper(#{searchKeyword})
            </when>
            <when test='category eq "tc"'>
                upper(TITLE) like upper(#{searchKeyword}) 
                or 
                upper(CONTENT) like upper(#{searchKeyword})
            </when>
            <when test='category eq "a"'>
                upper(AUTHOR) like upper(#{searchKeyword})
            </when>
        </choose>
        order by ID desc
    </select>

</mapper>
